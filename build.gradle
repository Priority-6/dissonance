plugins {
    id 'dev.architectury.loom' version '1.5-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version "8.1.1"
}

architectury {
    minecraft = minecraft_version
}

allprojects {
    group = maven_group
    version = mod_version
}


subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'

    base {
        // Set up a suffixed format for the mod jar names, e.g. `example-fabric`.
        archivesName = "$archives_name-$project.name"
    }

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
        mavenCentral()
        maven {
            url = "https://api.modrinth.com/maven"
            content {
                includeGroup "maven.modrinth"
            }
        }
        maven {
            url = 'https://jitpack.io'
            content {
                includeGroup 'com.github.LlamaLad7'
                includeGroup 'com.github.llamalad7.mixinextras'
            }
        }
        maven {
            url "https://maven.teamresourceful.com/repository/maven-public/"
        }
        maven {
            url "https://maven.nucleoid.xyz/"
            content {
                includeGroup("eu.pb4")
            }
        }
        maven {
            url "https://maven.shedaniel.me/"
        }
        maven {
            url "https://maven.architectury.dev/"
        }

        maven {
            url "https://maven.saps.dev/minecraft"
            content {
                includeGroup "dev.latvian.mods"
            }
        }
        maven {
            url "https://maven.ftb.dev/releases/"
            content {
                includeGroup "dev.ftb.mods"
            }
        }
    }

    dependencies {
        // To change the versions see the gradle.properties file
        minecraft "com.mojang:minecraft:${minecraft_version}"
        mappings loom.officialMojangMappings()

        // Resourceful
        compileOnly(group: "com.teamresourceful", name: "bytecodecs", version: "1.0.2")
    }

    loom {
        accessWidenerPath = file("src/main/resources/dissonance.accesswidener")
    }

    def targetJavaVersion = 17
    tasks.withType(JavaCompile).configureEach {
        // ensure that the encoding is set to UTF-8, no matter what the system default is
        // this fixes some edge cases with special characters not displaying correctly
        // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
        // If Javadoc is generated, this must be specified in that task too.
        it.options.encoding = "UTF-8"
        if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
            it.options.release.set(targetJavaVersion)
        }
    }

    java {
        def javaVersion = JavaVersion.toVersion(targetJavaVersion)
        if (JavaVersion.current() < javaVersion) {
            toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
        }
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()
    }

    jar {
        from("LICENSE") {
            rename { "${it}_${archives_base_name}" }
        }
    }

// configure the maven publication
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }

        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
        repositories {
            // Add repositories to publish to here.
            // Notice: This block does NOT have the same function as the block in the top level.
            // The repositories here will be used for publishing your artifact, not for
            // retrieving dependencies.
        }
    }

}
